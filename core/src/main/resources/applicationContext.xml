<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
        http://www.springframework.org/schema/jee
        http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">
        
    <!-- Shared properties between admin and site go here -->

    <!-- Scan Globalph Payment Gateway Implementation -->
    <context:component-scan base-package="cn.globalph.payment.service.gateway" />
    <context:component-scan base-package="cn.globalph.vendor.nullPaymentGateway"/>
	
	<!-- The "webDS" data source is the main data source. It is referenced and
         should be configured via JNDI in your particular environment. For local testing and
         development using Jetty, the JNDI data source is configured in the /WEB-INF/jetty-env.xml file.
         The other data sources are required as well.  They allow to use different databases
         for secure information such as payment info when in a PCI compliant situation, and/or for CMS
         if you wish to store content in a separate database. -->
    <!--  
    <jee:jndi-lookup id="globalphDS" jndi-name="jdbc/globalphDS"/>
    -->
    <bean id="globalphDSMaster" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />  
        <property name="url" value="${database.master.url}" />  
        <property name="username" value="${database.master.un}"/>
        <property name="password" value="${database.master.pw}"/>  
        <property name="initialSize" value="1"/>  
        <property name="maxActive" value="20"/>  
        <property name="maxIdle" value="20"/>
        <property name="minIdle" value="0"/>
        <property name="maxWait" value="60000"/>
        <property name="removeAbandoned" value="true"/>  
        <property name="removeAbandonedTimeout" value="180"/>
        <property name="validationQuery" value="select 1" />
    </bean>  
    
    <bean id="globalphDSSlave" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">   
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />  
        <property name="url" value="${database.slave.url}" />  
        <property name="username" value="${database.slave.un}"/>
        <property name="password" value="${database.slave.pw}"/>  
        <property name="initialSize" value="1"/>  
        <property name="maxActive" value="20"/>  
        <property name="maxIdle" value="20"/>
        <property name="minIdle" value="0"/>
        <property name="maxWait" value="60000"/>
        <property name="removeAbandoned" value="true"/>  
        <property name="removeAbandonedTimeout" value="180"/>
        <property name="validationQuery" value="select 1" />
    </bean>
    
    <bean id="globalphRWRoutingDS" class="cn.globalph.common.extensibility.jpa.RWRoutingDataSource">
    	<property name="targetDataSources">
    		<map>
    			<entry key="globalphDSMaster" value-ref="globalphDSMaster"/>
    			<entry key="globalphDSSlave" value-ref="globalphDSSlave"/>
    		</map>
    	</property>
    </bean>
    
    <bean id="blMergedDataSources" class="org.springframework.beans.factory.config.MapFactoryBean">
        <property name="sourceMap">
            <map>
                <entry key="jdbc/web" value-ref="globalphRWRoutingDS"/>
                <entry key="jdbc/webSecure" value-ref="globalphRWRoutingDS"/>
                <entry key="jdbc/cmsStorage" value-ref="globalphRWRoutingDS"/>
            </map>
        </property>
    </bean>

    <bean id="blMergedPersistenceXmlLocations" class="org.springframework.beans.factory.config.ListFactoryBean">
        <property name="sourceList">
            <list>
                <value>classpath*:/META-INF/persistence-core.xml</value>
            </list>
        </property>
    </bean>

    <bean class="cn.globalph.vendor.nullPaymentGateway.service.payment.NullPaymentGatewayType"/>

    <!-- Add Sample Thymeleaf Processor to test Hosted Payment Gateway (e.g. PayPal Express Flow) -->
    <bean id="myNullPaymentGatewayHostedActionProcessor" class="cn.globalph.vendor.nullPaymentGateway.web.processor.NullPaymentGatewayHostedActionProcessor"/>
    <bean id="mySamplePaymentProcessors" class="org.springframework.beans.factory.config.SetFactoryBean">
        <property name="sourceSet">
            <set>
                <ref bean="myNullPaymentGatewayHostedActionProcessor"/>
            </set>
        </property>
    </bean>
    <bean class="cn.globalph.common.extensibility.context.merge.LateStageMergeBeanPostProcessor">
        <property name="collectionRef" value="mySamplePaymentProcessors"/>
        <property name="targetRef" value="blDialectProcessors"/>
    </bean>

    <bean id="mySampleConfigurationServices" class="org.springframework.beans.factory.config.ListFactoryBean">
        <property name="sourceList">
            <list>
                <ref bean="blNullPaymentGatewayConfigurationService"/>
                <ref bean="blNullPaymentGatewayHostedConfigurationService"/>
            </list>
        </property>
    </bean>
    <bean class="cn.globalph.common.extensibility.context.merge.LateStageMergeBeanPostProcessor">
        <property name="collectionRef" value="mySampleConfigurationServices"/>
        <property name="targetRef" value="blPaymentGatewayConfigurationServices"/>
    </bean>
    <!-- /End DemoSite NullPaymentGateway Config -->

    <!-- Inventory class transformer to enable simple inventory management. This transformer should be removed in Broadleaf 3.2.0+ -->
    <bean id="blInventoryClassTransformer" class="cn.globalph.common.extensibility.jpa.copy.DirectCopyClassTransformer">
        <constructor-arg name="moduleName" value="Basic Inventory Management" />
        <property name="xformTemplates">
            <map>
                <entry key="cn.globalph.b2c.product.domain.SkuImpl"
                       value="cn.globalph.b2c.catalog.domain.QuantityAvailableSkuTemplate">
                </entry>
            </map>
        </property>
    </bean>
    
    <bean id="customClassTransformers" class="org.springframework.beans.factory.config.ListFactoryBean">
        <property name="sourceList">
            <list>
                <ref bean="blInventoryClassTransformer" />
            </list>
        </property>
    </bean>
    
    <bean class="cn.globalph.common.extensibility.context.merge.LateStageMergeBeanPostProcessor">
        <property name="collectionRef" value="customClassTransformers" />
        <property name="targetRef" value="blMergedClassTransformers" />
    </bean>
	
	<bean id="commStorageProviders" class="org.springframework.beans.factory.config.ListFactoryBean" >
        <property name="sourceList">
            <list>
            	<ref bean="commFileSystemStorageProvider"/>
            	<ref bean="commClassPathStorageProvider"/>
            	<ref bean="cmsDatabaseStorageProvider"/>
            </list>
        </property>
    </bean>
</beans>